{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\patri\\\\Desktop\\\\code\\\\COP 4530\\\\Outfit-Generator-Frontend\\\\frontend\\\\src\\\\Keywords\\\\Keywords.js\",\n  _s = $RefreshSig$();\nimport \"./Keywords.css\";\nimport { useState } from \"react\";\nimport { useContext } from \"react\";\nimport { FeedContext } from \"../AppMain\";\nimport brandTag from \"../images/brandTag.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Keywords = () => {\n  _s();\n  // Source brand and setBrand\n  const {\n    brand,\n    setBrand\n  } = useContext(FeedContext);\n\n  // Define state for array of selected words and input text\n  const [selectedWords, setSelectedWords] = useState([]);\n  const [inputText, setInputText] = useState(\"\");\n\n  // Define function that adds a word to the selectedWords array\n  const addWord = word => {\n    let internalWord = word.toLowerCase();\n    if (internalWord === \"\") {\n      return;\n    }\n    if (selectedWords.includes(internalWord)) {\n      return;\n    }\n    setSelectedWords(selectedWords.filter(w => w !== internalWord));\n    setSelectedWords([...selectedWords, internalWord]);\n    setBrand([...brand, internalWord]);\n  };\n  const removeWord = word => {\n    setSelectedWords(selectedWords.filter(w => w !== word));\n    setBrand([...brand.filter(w => w !== word)]);\n  };\n  const makeUppercase = word => {\n    const words = word.split(\" \");\n    let putStr = \"\";\n    for (let wordd of words) {\n      putStr += wordd.charAt(0).toUpperCase() + wordd.slice(1) + \" \";\n    }\n    putStr = putStr.slice(0, -1);\n    return putStr;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Keywords\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Keyword-Input-Div\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"Keyword-Input\",\n        type: \"text\",\n        value: inputText,\n        onChange: e => {\n          setInputText(e.target.value);\n        },\n        onKeyDown: e => {\n          if (e.key === \"Enter\") {\n            addWord(inputText);\n            setInputText(\"\");\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Add-Button\",\n        onClick: () => {\n          addWord(inputText);\n          setInputText(\"\");\n        },\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Selected-Words\",\n      children: selectedWords.map(word => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Selected-Word-Div\",\n          onClick: () => removeWord(word),\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"Selected-Word\",\n            children: makeUppercase(word)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"Brand-x-Tag\",\n            src: brandTag,\n            alt: \"x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 7\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 3\n  }, this);\n};\n_s(Keywords, \"Zzcvp9ksnrgXlDbeLnCzACoTd2U=\");\n_c = Keywords;\nvar _c;\n$RefreshReg$(_c, \"Keywords\");","map":{"version":3,"names":["useState","useContext","FeedContext","brandTag","jsxDEV","_jsxDEV","Keywords","_s","brand","setBrand","selectedWords","setSelectedWords","inputText","setInputText","addWord","word","internalWord","toLowerCase","includes","filter","w","removeWord","makeUppercase","words","split","putStr","wordd","charAt","toUpperCase","slice","className","children","type","value","onChange","e","target","onKeyDown","key","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/patri/Desktop/code/COP 4530/Outfit-Generator-Frontend/frontend/src/Keywords/Keywords.js"],"sourcesContent":["import \"./Keywords.css\";\r\nimport { useState } from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { FeedContext } from \"../AppMain\";\r\nimport brandTag from \"../images/brandTag.svg\";\r\nexport const Keywords = () => {\r\n\t// Source brand and setBrand\r\n\tconst { brand, setBrand } = useContext(FeedContext);\r\n\r\n\t// Define state for array of selected words and input text\r\n\tconst [selectedWords, setSelectedWords] = useState([]);\r\n\tconst [inputText, setInputText] = useState(\"\");\r\n\r\n\t// Define function that adds a word to the selectedWords array\r\n\tconst addWord = (word) => {\r\n\t\tlet internalWord = word.toLowerCase();\r\n\t\tif (internalWord === \"\") {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (selectedWords.includes(internalWord)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetSelectedWords(selectedWords.filter((w) => w !== internalWord));\r\n\t\tsetSelectedWords([...selectedWords, internalWord]);\r\n\t\tsetBrand([...brand, internalWord]);\r\n\t};\r\n\tconst removeWord = (word) => {\r\n\t\tsetSelectedWords(selectedWords.filter((w) => w !== word));\r\n\t\tsetBrand([...brand.filter((w) => w !== word)]);\r\n\t};\r\n\r\n\tconst makeUppercase = (word) => {\r\n\t\tconst words = word.split(\" \");\r\n\t\tlet putStr = \"\";\r\n\t\tfor (let wordd of words) {\r\n\t\t\tputStr += wordd.charAt(0).toUpperCase() + wordd.slice(1) + \" \";\r\n\t\t}\r\n\t\tputStr = putStr.slice(0, -1);\r\n\t\treturn putStr;\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"Keywords\">\r\n\t\t\t<div className=\"Keyword-Input-Div\">\r\n\t\t\t\t<input\r\n\t\t\t\t\tclassName=\"Keyword-Input\"\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tvalue={inputText}\r\n\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\tsetInputText(e.target.value);\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonKeyDown={(e) => {\r\n\t\t\t\t\t\tif (e.key === \"Enter\") {\r\n\t\t\t\t\t\t\taddWord(inputText);\r\n\t\t\t\t\t\t\tsetInputText(\"\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName=\"Add-Button\"\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\taddWord(inputText);\r\n\t\t\t\t\t\tsetInputText(\"\");\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\tAdd\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"Selected-Words\">\r\n\t\t\t\t{selectedWords.map((word) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclassName=\"Selected-Word-Div\"\r\n\t\t\t\t\t\t\tonClick={() => removeWord(word)}>\r\n\t\t\t\t\t\t\t<p className=\"Selected-Word\">\r\n\t\t\t\t\t\t\t\t{makeUppercase(word)}\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\tclassName=\"Brand-x-Tag\"\r\n\t\t\t\t\t\t\t\tsrc={brandTag}\r\n\t\t\t\t\t\t\t\talt=\"x\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}