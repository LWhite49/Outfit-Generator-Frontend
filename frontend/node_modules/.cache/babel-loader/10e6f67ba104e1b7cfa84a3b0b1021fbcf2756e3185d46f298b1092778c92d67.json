{"ast":null,"code":"import\"./Keywords.css\";import{useState}from\"react\";import{useContext}from\"react\";import{FeedContext}from\"../AppMain\";import brandTag from\"../images/brandTag.svg\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export const Keywords=()=>{// Source brand and setBrand\nconst{brand,setBrand}=useContext(FeedContext);// Define state for array of selected words and input text\nconst[selectedWords,setSelectedWords]=useState([]);const[inputText,setInputText]=useState(\"\");// Define function that adds a word to the selectedWords array\nconst addWord=word=>{let internalWord=word.toLowerCase();if(internalWord===\"\"){return;}if(selectedWords.includes(internalWord)){return;}setSelectedWords(selectedWords.filter(w=>w!==internalWord));setSelectedWords([...selectedWords,internalWord]);setBrand([...brand,internalWord]);};const removeWord=word=>{setSelectedWords(selectedWords.filter(w=>w!==word));setBrand([...brand.filter(w=>w!==word)]);};const makeUppercase=word=>{const words=word.split(\" \");let putStr=\"\";for(let wordd of words){putStr+=wordd.charAt(0).toUpperCase()+wordd.slice(1)+\" \";}putStr=putStr.slice(0,-1);return putStr;};return/*#__PURE__*/_jsxs(\"div\",{className:\"Keywords\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"Keyword-Input-Div\",children:[/*#__PURE__*/_jsx(\"input\",{className:\"Keyword-Input\",type:\"text\",value:inputText,onChange:e=>{setInputText(e.target.value);},onKeyDown:e=>{if(e.key===\"Enter\"){addWord(inputText);setInputText(\"\");}}}),/*#__PURE__*/_jsx(\"button\",{className:\"Add-Button\",onClick:()=>{addWord(inputText);setInputText(\"\");},children:\"Add\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"Selected-Words\",children:selectedWords.map(word=>{return/*#__PURE__*/_jsxs(\"div\",{className:\"Selected-Word-Div\",onClick:()=>removeWord(word),children:[/*#__PURE__*/_jsx(\"p\",{className:\"Selected-Word\",children:makeUppercase(word)}),/*#__PURE__*/_jsx(\"img\",{className:\"Brand-x-Tag\",src:brandTag,alt:\"x\"})]});})})]});};","map":{"version":3,"names":["useState","useContext","FeedContext","brandTag","jsx","_jsx","jsxs","_jsxs","Keywords","brand","setBrand","selectedWords","setSelectedWords","inputText","setInputText","addWord","word","internalWord","toLowerCase","includes","filter","w","removeWord","makeUppercase","words","split","putStr","wordd","charAt","toUpperCase","slice","className","children","type","value","onChange","e","target","onKeyDown","key","onClick","map","src","alt"],"sources":["C:/Users/joinu/Documents/GitHub/Outfit-Generator-Frontend/frontend/src/Keywords/Keywords.js"],"sourcesContent":["import \"./Keywords.css\";\r\nimport { useState } from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { FeedContext } from \"../AppMain\";\r\nimport brandTag from \"../images/brandTag.svg\";\r\nexport const Keywords = () => {\r\n\t// Source brand and setBrand\r\n\tconst { brand, setBrand } = useContext(FeedContext);\r\n\r\n\t// Define state for array of selected words and input text\r\n\tconst [selectedWords, setSelectedWords] = useState([]);\r\n\tconst [inputText, setInputText] = useState(\"\");\r\n\r\n\t// Define function that adds a word to the selectedWords array\r\n\tconst addWord = (word) => {\r\n\t\tlet internalWord = word.toLowerCase();\r\n\t\tif (internalWord === \"\") {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (selectedWords.includes(internalWord)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetSelectedWords(selectedWords.filter((w) => w !== internalWord));\r\n\t\tsetSelectedWords([...selectedWords, internalWord]);\r\n\t\tsetBrand([...brand, internalWord]);\r\n\t};\r\n\tconst removeWord = (word) => {\r\n\t\tsetSelectedWords(selectedWords.filter((w) => w !== word));\r\n\t\tsetBrand([...brand.filter((w) => w !== word)]);\r\n\t};\r\n\r\n\tconst makeUppercase = (word) => {\r\n\t\tconst words = word.split(\" \");\r\n\t\tlet putStr = \"\";\r\n\t\tfor (let wordd of words) {\r\n\t\t\tputStr += wordd.charAt(0).toUpperCase() + wordd.slice(1) + \" \";\r\n\t\t}\r\n\t\tputStr = putStr.slice(0, -1);\r\n\t\treturn putStr;\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"Keywords\">\r\n\t\t\t<div className=\"Keyword-Input-Div\">\r\n\t\t\t\t<input\r\n\t\t\t\t\tclassName=\"Keyword-Input\"\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tvalue={inputText}\r\n\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\tsetInputText(e.target.value);\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonKeyDown={(e) => {\r\n\t\t\t\t\t\tif (e.key === \"Enter\") {\r\n\t\t\t\t\t\t\taddWord(inputText);\r\n\t\t\t\t\t\t\tsetInputText(\"\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName=\"Add-Button\"\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\taddWord(inputText);\r\n\t\t\t\t\t\tsetInputText(\"\");\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\tAdd\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"Selected-Words\">\r\n\t\t\t\t{selectedWords.map((word) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclassName=\"Selected-Word-Div\"\r\n\t\t\t\t\t\t\tonClick={() => removeWord(word)}>\r\n\t\t\t\t\t\t\t<p className=\"Selected-Word\">\r\n\t\t\t\t\t\t\t\t{makeUppercase(word)}\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\tclassName=\"Brand-x-Tag\"\r\n\t\t\t\t\t\t\t\tsrc={brandTag}\r\n\t\t\t\t\t\t\t\talt=\"x\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}